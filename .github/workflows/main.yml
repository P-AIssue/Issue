name: CI/CD Pipeline

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Gradle Package Caching
      - name: Caching Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # dev branch인 경우 dev profile로 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -i --no-daemon
        env:
          SPRING_PROFILES_ACTIVE: dev

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/aissue:latest .

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/aissue:latest

  Continuous-Deployment:
    if: github.name == 'push'
    needs: Continuous-Integration
    runs-on: self-hosted

    steps:
      - name: Docker Image Pull
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/aissue:latest

#      - name: Delete Docker Compose
#        run: rm -f docker-compose.yml

#      - name: Set Docker Compose
#        run: |
#          echo "${{ secrets.DOCKER_COMPOSE_YML }}" | base64 --decode > docker-compose.yml

      - name: Docker Compose Stop
        run: docker-compose down

      - name: Docker Compose Start
        run: docker-compose up -d